@22/12/30

메일제출 : 
이름_HTML수업내용정리

브라우저는 무조건 크롬 기준
korean
live sever

설정 : ctrl + ,
주석 : ctrl + /
여러줄 주석 : ctrl + shift + /
shift + alt + 아래화살표 = 한줄복사
alt + 아랫화살표 = 코드 위치이동
ctrl + z = 실행취소
---------------------------------------------------------------------------------------------------------

MVC 패턴이 나오는 이유 -> 수정,유지보수를 하기위해서
MVC : 각 역할하는 언어별로 파일을 분리
HTML,CSS,JS

코어기술만 알면된다
Front = HTML,CSS,JS
Back = JAVA

HTML = 구조를 만든다(뼈대)
CSS = 인테리어
JS = 동작(동사와 관련) 

웹 작동 방식
C   -    S 방식
     ->
  request : 요청
      <-
  response : 응답

C = Client = 브라우저
S = Sever = 모든 Data가 있는 것

http 통신규약

브라우저의 모든 타입은 "문자열"

코딩의 작동방식은 = top-down

코드해석 방식 
한줄씩 = 인터프린터
전체 = 컴파일

html 형식이 있음
 html -> dom 객체

문자열 = text node

용어를 알아야 하는이유 : 구글링 기술문서 교재

html = 요소(elements) | <html> = 태그
속성명 = "속성값"
attribute = value

단일태그, 빈태그, 홀태그
단일태그 = 종료 때 / 없음

웹 접근성 -> 화면낭독기
meta -> 문서전체를 나타내는 특징
charcacter = 문자
charset = 문자묶음

영어 = 1byte
한글 = 2bte

<h> = heading(제목)

블록요소 : 라인 하나를 다 쓰는 것
태그 = 블록과 인라인

*기본 텍스트의 폰트 크기 = 16px
&nbsp = 1개당 1칸 띄어쓰기

YOU & ME
YOU &AMP; ME  <- 이렇게 쓰는거 추천

h1 = 무조건 한번

태그 중첩가능
그룹핑 태그 = 특정영역을 묶어서 한번에 효과를 주기위해 나온 태그
주로 css와 연동

css,js = span에 ~를 ~하겠다
heading, p , span, href  <- 네개 중요!
href = host ref
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/02

UI = 사용자 인터페이스

UX = 사용자 경험 (로그인 창)

Front-end 기준 
*기획(50%) - 웹디자인(30%) - 웹퍼블리셔(20%)
시행착오가 줄어들기 때문에 기획을 굉장히 오래함

클론코딩을 한다 구조만 잘 짜도 좋다

절대 경로와 상대 경로가 있다

절대 경로 = 내 pc -> c드라이브 (잘 안씀) 절대 안변함
상대 경로 = 상대가 나오면 무조건 어딘가에 기준이 있다. 기준값이있다

참조 주소 방식 = 서버의 주소값을 참조해서 가져옴

인라인 = a 하고 이미지
src = 소스의 약자

. => 현재의위치를 나타냄 (100_html), 실제 기준 = 내가 사용하고있는 html파일
.. 은 산 꼭대기 즉 상위의
/ = 경로를 나타내는 폴더
alt = 대한 텍스트

px = 사진의 단위

이미지 관련 확장자 = *jpg, *png, *gif (여기까지 표준, 비트맵 방식, ex포토샵 해상도가 깨질수도있음)
 *svg(벡터 방식, ex애니메이션, 해상도가 깨지지 않음)

 CDN = content delievery network
 남의 서버의 정보를 가져옴

1920x1280 = 1인치에 1980개가 들어있음

alt + w = 블록처리
png는 해상도가 좋다

alt + 클릭 = 다중 커서

ul = 순서가 없는 목록 규칙성이 있음 ul = 부모 li = 자식 블록요소

zen coding 
단축코딩

ol = 순서가 있는 목록
type으로 a나 1 로마숫자로 표기 할 수 있다
start로 시작 순서를 바꿀수있다

list부터 depth가 나옴 2depth = 서브 메뉴 1depth = 주 메뉴
Dom의 위계질서,  부모 자식의 관계
{}를 쓰면 텍스트노드 사용가능

정의형 목록 : dl, dt, dd
dt는 dd이다 dt is dds

Dom 객체 = Document Object Model
Model = DB = 데이터
Document = 문서
객체 = Object
객체 = 각각의 부품
Dom에서의 객체는 태그
dom = 트리구조
> 부모자식 + 형제

tr = 가로, x축
td = 칸 나누기 table divide
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/03

지식, 기술, 태도 3가지로 평가

대문자는 중요하기 때문에 표현함

[]는 속성명=속성값을 넣을 수 있다

span은 효과를 편히 넣기 위해있는 영역표시이다

 border-collapse: collapse;
 테이블 2줄을 한줄로 합치는 것

 웹 = A~Z 까지 돌아가는게 명쾌하지 않다

 브라우저의 기본방식은 top-down
 css 똑같은 속성이 있으면 밑에 있는 것이 적용됨

 태그에는 성격이 있다 with 혈액형
 테이블 = 테이블성격
 colspan = 가로로 합치기 x축
 rowspan = 세로로 합치기 y축

 caption = 표제목 | 중앙정렬

 th = 테이블 제목

 tr>th{$}*3 

     <tr>
        <th></th>
        <th></th>
        <th></th>
    </tr>

 figure>figcaption | 중앙정렬 안됨

 colgroup
 style 편하게 하기 위해 사용

 thead 제목
 tbody 내용
 tfoot 결과

*구조라는 말이 나오면 중요!
시멘틱 = 시멘트 | 정형화 되어있는, 의미있는

본문이 되면 head => header, body => main, foot => footer로 바뀐다
header = 로고, GNB
main = section, article | role="main" 을써야함
section = 영역, 부분 | 앨범의 1집 2집 3집 
article = 기사 | 앨범의 1집에 들어가는 곡명
section, article에는 heading 태그가 하나씩 들어가있어야함

span = 인라인요소의 그룹핑 태그
div = divaide 블록요소의 그룹핑 태그
id = 이름표 중복x | ex주민등록번호
상속 = inheritance

리셋 = 브라우저에 적용되어있는 css를 초기화 시킨다

* = all
# = id를 사용할 떄

아래 3개 중요!! box modeling 3속성

박스 경계 = border
경계랑 콘텐츠 사이 = padding
박스와 박스 사이 간격 = margin

기본 리셋 5가지

 * {
            margin: 0;
            padding: 0;
        }

        h1,h2,h3,h4,h5,h6 {
            font-size: 16px; 폰트 16px
            font-weight: normal; 
        }
        a {
            color: inherit;
            text-decoration: none;
        }
        li {
            list-style: none;
        }
        img {
            vertical-align: top;
        }

1.구조 html
2.css
3.js
4.servlet/jsp

margin border padding 값을 4개를 가진다(상top, 하bot,좌left, 우right)
값이 들어가는 순서는 top이 기준이고 시계방향으로 들어간다
margin 0 auto; | auto를 쓰면 좌우 값을 잡아준다

컬러 = rgb (빛의 3원색) = 포토샵
#ffffff = 16진수로 표현한 것 
#000 = black
#fff = white

aside = 쇼핑몰 본문 말고 옆에 최근본상품 같이 따라 다니는 것

margin 0 auto = 박스 바깥의 영역
text-align: center  박스의 내용물만 움직임
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/04

웹 애플리케이션 개발자

기획(공통으로 볼수있게 만든다) -> 디자인 -> 웹개발(고정형 픽셀값) -> 백엔드
GUI

게시판 핵심 = 테이블 , 폼

Form 폼 기초 : 데이터를 서버에 보냄,  dom 구조가 정해져있음

<form action="">
    <fieldset>
        <legend></legend>
    </fieldset>
</form>

form = 양식
입력받은 데이터를 서버에 전송
method의 방식은 get, post

get=보안취약
post=보안좋음

action = 서버프로그램 파일명 |*.jsp, *.php, *asp
method = 서버에 데이터를 전송할떄의 방식 | get, post
웹에서 넘기는 데이터는 무조건 문자로 넘어간다

fieldset = 하나의 덩어리, 화면의 보여지는 박스
legend = 제목
폼에 사용되는 요소 = 인라인요소

max = 최대 몇자 이하 
mix = 최소 몇자 이상

폼 페이지 하나에는 submit이 하나
유효성 검사 = 데이터의 유효성 검사, 데이터에 문제가 없다는 검사
required = required 라고 써야하는데 required 하나만 써도 된다 틀린곳이 있는지 구별
autofocus 커서를 깜빡이게 하는 것
autocomplete 서버에 보낸 데이터를 보여준다

type = tel => 모바일에서 전화번호를 사용할떄 숫자만 나오게 하는것

radio = 데이터를 하나만 선택할 때 사용
name 속성은 꼭 맞춰줘야함 | 백엔드에서 가져가는 속성
value = db에 들어가는 값 |  속성명 : 속성값 | key ="value"
checkbox = 여러데이터를 선택할 때 사용
checked = 체크가 되어 있다

value = input 값
step = 2단계씩 넘어간다

select = 여러 데이터를 나열
optgroup 가독성을 위해 분류

datalist = 한번 선택하면 수정이 안됨
button 내부에서 사용하는 버튼 외부는 안됨
버튼 선택 못하게 하는것이 disabled
해당 속성값을 db에 넘겨야 하려면 readonly

비디오 요소를 html5에서 지원해줌
video src는 소스를 하나밖에 사용못해서 사용안함
source를 사용하는 이유는 여러개를 사용하기위해서

마임타입 = 서버에 알려주는것

muted autoplay |  muted를 사용안하면 autoplay가 안된다
loop 무한으로 시청됨
controls를 쓰면 영상을 제어할수 있음
poster = 영상의 재생이 멈출떄 보여주는 이미지

margin - 방향 사용하면 원하는 방향만 할 수 있다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/05

        video {
            width: 100%;   <- 중요
        }
width 값이 되어 있는곳이 기준이 된다 기준은 대체로 부모 또는 할아버지

영상의 높이값은 원본의 너비값에 비율에 따라 달라진다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/06

FGI (Focus Group Interview)

 페르소나(Persona)

브레인스토밍(Brainstorming) : 단어 하나로 계속 얘기하는 것
비판이나 비난 금지, 어떠한 아이디어도 수용, 적극적인 참여

 평가 = 지필 또는 포토폴리오 로 할 수 있다
 
 CSS = TOP-DOWN
 CASCADING =  폭포
 STYLE SHEET = 한 묶음 이곳에 다 저장되어있고 여기서 가져다가 쓴다

1. 내부 스타일 : title아래의 style태그를 사용하여 쓴다
2. 인라인 스타일 : 태그에 직접 style을 적용한다
3. 외부 스타일 : link태그를 사용하여 외부에서 파일을 가져온다
4. 클래스 스타일 : 태그에 class를 사용하여 아이디를 주고 style태그 안에서 .id값을 사용하여 적용한다

선택자 우선순위는 정해져 있다
범위가 적을수록 우선순위가 높다  = 희귀성이 있으면 값이 높다
요소 > 클래스
id = 구분을 위해서 사용,  같은문서내에서 한번만 쓸수있다

클래스 선택자를 제일많이 씀 = 장점은 재사용성
재사용성으로 탄생한것이 boot strap <- 망함


캐스캐이딩의 원리 = 속성값이 다를때만 적용됨

text node
<span>

전체 < 요소 < 클래스 < 아이디 < 인라인 < !important 
순으로 우선순위가 높다
important를 쓸 떄 캐스캐이딩을 이용해서 제일아래서 적용시킨다

폰트가 많이 중요함 가독성 때문
저작권 중요

외부에서 가져오는 것을 CDN이라고 한다

lorem = 의미없는 더미텍스트

px = 픽셀은 고정값
브라우저랑 상관없음
상대값나오면 어딘가에 기준값이있다
별도 설정이없으면 부모가 기준
16px을 기준으로 계산

em단위
1em = 16px = 100% = 1rem
em의 불편함을 상쇄한것이 rem
rem = root em
root = html = 브라우저

행간 = 문자와 문자사이 간격 |  기본이 1em
행간의 기준값은 폰트크기

1.5~1.75가 사람이 보기좋은 행간

브라우저 기준 행간을 위의반 아래의반을 각각 준다
baseline = 기준선

16px/1.5em
/로 폰트뒤에 바로 행간을 쓸수있다
bold 와 italic도 클론 다음에 사용할수있다

font face
가지고있는 폰트를 메모리에 올려놓고 다른사람이 볼때 보이게 하는것

---------------------------------------------------------------------------------------------------------
PS

1280 x 800 = 해상도
72ppi = pixel per inches 1인치당 8~9개 픽셀이 들어가있다
웹의 기본은 72ppi

400이 노말
bold = 700  노말이랑 bold 만 중요함

bolder = 900
300 ~ 900까지 있음
폰트마다 두께는 일정하지않음
폰트는 인용구안에 안써도된다
단어 + 단어 가 만나는 폰트일떄 사용
앞에있느것이 안되면 뒤에있는 대체폰트가 적용된다
sans-serif 고딕체
cursive = 흘림체

투명도 = 0~1사이의 값
1이면 불투명 
0이면 투명도 100%

평가에 나올수도있음 문서전체 폰트바꾸기


