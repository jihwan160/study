@23/01/16

플롯의 기본 = 형제끼리의 플롯을 준다
header 아래 자식으로 h1, nav 가있고 h1의 float:left nav의 float:right를 주고 header에서 플롯해제를 한다
li에서 플롯을 사용하고 부모인 nav에서 플롯을 사용하면 li의 플롯은 자동으로 해제가 된다
이미지가 width값을 가져서 따로 width값을 안줘도 된다

2단플롯은 길상백호만 기억하면된다

a -> b 중간과정이 없다
원래있던박스가 b로 변하는것을 트랜스폼이라 한다
접두어를 붙어주어야한다

값이 양수면 가운데로
값이 음수면 반대로

X축, Y축 이동
transform: translate(10px,20px)

크기변환
transform: scale(0.8)

회전
 transform: rotate(-20deg);
양수면 시계방향으로 돈다 | 음수면 시계반대방향으로 돈다

위에 3개만 알면된다

기울이기(왜곡)
transform: skew(30deg,0)

트랜지션은 애니메이션이랑 구분만 할줄 알면 된다
트랜지션 = a -> b
동그라미에서 네모로 바꾸는 트랜지션을 걸면 중간과정을 브라우저에서 해준다
트랜지션도 시간이있어야한다

 /* transition 시킬 CSS 속성명 */
transition-property: width,height,background-color;

/* transition 시킬 시간 */
transition-duration: 1s;

/* 한줄표기법 */
transition: all 1s;

애니메이션은 제약이없다
애니메이션은 무조건 시간이있어야한다

property = 속성

/* 1. linear : 같은 속도로 트랜지션 진행 */
        .linear {
            transition: all 1.5s linear;
        }
        /* 2. ease : 처음에는 천천히 시작, 점점 빨라진 후 마지막에 천천히 트랜지션 진행 (기본값) */
        .ease {
            transition: all 1.5s ease;
        }
        /* 3. ease-in : 처음에는 천천히 시작 */
        .ease-in {
            transition: all 1.5s ease-in;
        }
        /* 4.ease-out : 끝은 천천히 함 */
        .ease-out {
            transition: all 1.5s ease-out;
        }
        /* 5. ease-in-out : 끝을 천천히 함 */
        .ease-in-out {
            transition: all 1.5s ease-in-out;
        }
        /* hover 시 높이값이 적용되면서 트랜지선 실행 */
        #tr_speed:hover div {
            height: 200px;
        }

쇼핑몰에서 물건 글자크기 두께 컬러 위계질서가있다
상품명을 쓸때는 2줄쓰기

위치잡기
구조 = float flex + position
position = 박스를 겹쳐보이게하는 기술

position: absolute;  
left: 0;                = 기본
top: 0;

조건이 하나있다  = 위치 기준값을 정해줘야한다
position: relative; = 위치 기준값이 부모한테 잡힌다

포지션들끼리 겹치고 내가 보여주고 싶은걸 보여줄떄 z-index: 1;를 사용한다

opacity: 1; = 투명도 조정하는 것


/* 트랜지션 효과 */
        .prod_list .caption {
            width: 300px;
            height: 200px;
            padding-top: 20px;
            background-color: rgba(0, 0, 0, 0.4);
            /* 포지션 */
            position: absolute;
            left: 0;
            top: -200px;
            z-index: 1;
            opacity: 0;
            /* 트랜지션 */
            transition: all 0.2s linear;
        }
        /* 트랜지션 호버시 동작(여기가 핵심) */
        .prod_list li:hover .caption {
            transform: translateY(200px);
            opacity: 1;
        }
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/17
트랜지션
a -> b
애니메이션은
a ->b -> c -> d

애니메이션은 키프레임을 설정 해줘야한다

@ 이것이 붙으면 메모리에 바로 올라간다
브라우저에 로딩이 되자마자 바로 실행이된다

from = 시작될떄 모양
to = 끝이 날떄 모양

사각형에서 원형을 만드는 법
border-radius: 50%;


포지션 = 레이아웃잡기는 아주쉽다
박스가 겹칠 때만 사용
모바일 제일 상단에는 자주사용

position: relative; = ~연관된
relative를 사용하면 위치값을 쓸수가 있다 (top,bottom,right,left)
기본값은 = left: 0;
            top: 0;
            z-index: 1;  = 순서
위에 3개는 무조건 가진다

relative = relative가 가지고있던땅은 아무도 못들어온다
relative만 hole이 있고

absolute = 절대값
absolute = hole이 없다
absolute선언하면 반드시 위치기준값을 정해줘야한다
기준값을 안정해주면 fixed랑 다른것이없다
absolute가 있던자리에 다른 박스들이 들어온다

fixed 도 hole이없다
fixed가 있던자리에 다른 박스들이 들어온다
브라우저 크기가 바뀌어도 고정된 값으로 고정되어있다

z값을 올리면 박스가 제일 위로 올라간다
제일 위로 올리고 싶으면 9999
제일 아래로 내리고 싶으면 -(마이너스)값을 준다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/18


3단 플롯을 사용할 때 왼쪽 박스와 가운데 박스를 하나의 div로 묶어서 상위 박스를 하나 만들고
그 상위 박스와 오른쪽 박스가 형제가 되게 만든다
왼쪽박스에 float : left; 를 주고 가운데 박스에 float : right(left); 를 주고
상위 박스에서 해제를 하여도 되지만 상위박스에서 float을 사용하면 해제할 필요가 없다
그리하여 상위박스에서 float : left;를 사용하고 오른쪽 박스에서 float : right(left);를 사용하고
상위박스와 오른쪽박스에 부모한테서 float해제를 해주면 3단 플롯이 완성이 된다
3단플롯이 어려울 때는 루브르를 많이 연습하면된다
2단플롯이 어려울 때는 길상백호를 많이 연습하면 된다

---------------------------------------------------------------------------------------------------------
PS

F8번은 INFO
픽셀너비값을 보는것

1920X2000
아트보드가 나오면 레이아웃에서 플렛이미지누르면 됨
배경이미지가 합쳐지는것

좌우 300씩 잡아서 1320크기를 잡는다
1320 = MARGIN 0 AUTO 기준
1320 = 세이프 에어리어 보여주어야할것은 여기 안에만 쓴다
#wrap = width 1320px 으로 잡으면 된다

alt +  backspace = 전경색 넣기

레이아웃 2개를 선택하고 무브툴로가면 메뉴쪽에서 버티컬을 선택할수있다

shift + 방향키 = 10px씩 움직인다
마크툴로 재서 몇픽셀인지 본다

그리드 시스템 grid system
가독성 때문에 사용 잡지,신문 같은것

1320 에서 좌우 20씩 빼면 1280으로 만든다

이미지를 불러오고 이미지사이즈를 1920사이즈로 맞추고
이미지에서 adjustment에서 레벨과 커브를 선택해서 오토로 한다

배경을 무브툴로 끌어다가넣고
레이아웃에서 이미지를 선택하고 마우스우클릭한다음에 create cliping mask를 사용하면 헤더영역만 이미지가 들어간다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/19

플렉스(flex) 박스
: CSS3에서 처음 소개된 속성 => 가변적 박스를 만드는 기술과 자유로운 박스 배치 기술임

가변 = 상대단위 = %

flexable에서 가져왔다 = 유연한
footer에 공백을 띄우려면 margin bottom을 주면 안된다
마진은 박스끼리의 공백을 띄우기 위해 주는거기 때문에

Dom = 부모 자식 관계
flex박스는 자기 자식만 해당됨 다른 자식은 안됨

# 용어
        개념1. 플렉스 박스 = 부모박스에 CSS 속성 코딩
                            display: -webkit-flex;
                            display : flex;
        개념2. 플렉스 아이템 = 부모박스에 display:flex가 선언되면
                                그 자식박스는[플렉스 아이템]으로 변경되고,
                                펠렉스 아이템이 레이아웃 됨.

플렉스 박스의축 = x축 y축
기본은 가로배치

부모박스에 플렉스 선언
자식들만 플렉스 아이템으로 변경디면서
플렉스 아이텀이 가로배치가 된다
콘텐츠 양만큼만 가로값을 가진다

플렉스 아이템 여러줄 배치(flex-wrap) => [부모박스]에 설정
        :플렉스 박스안에 플렉스 아이템이 배치될 떄 기본적으로 한줄로만 배치될
        플렉스 아이템을 여러줄로 배치하고 싶으면 flex-wrap 사용
        # 속성명 : flex-wrap
        # 속성값 : nowrap(기본값), wrap

flex-wrap:nowrap
display: flex;
        flex-direction: row;
        flex-wrap: nowrap;

flex-wrap:wrap
display: flex;
        flex-direction: row;
        flex-wrap: wrap;
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/20

플렉스 아이템 주축방향배치(justify-contnet) = [부모박스]에 설정
        : 플렉스 아이템 주축의 시작점부터 배치
        # 속성명 : justify-contnet
        # 속성값 : flex-start[기본값], flex-end, center, space-between, space-around


justify-content: flex-start; 왼쪽끝에 붙음

justify-content: flex-end; 오른쪽 끝에 붙음

justify-content: center; 박스들을 가운데로 배치한다 margin 0 auto;랑 비슷하다

justify-content: space-around; 박스하나당 좌우에 똑같은 간격을 갖는다

justify-content: space-between; **제일 많이 쓴다 
첫번쨰 박스하고 마지막박스는 부모박스 양쪽에 무조건 붙고
나머지 박스들은 공평하게 브라우저가 딱 나누어준다


플렉스 아이템 교차축방향배치(align-items) => [부모박스]에 설정
        : 주축(row일때 X축, column일때 Y축)의 수직방향으로 플렉스 아이템 배치
        # 속성명 : align-items
        # 속성값 : stretch[기본값], flex-start, flex-end, center, baseline


height에  min = ~이상 max= ~이하
mix max = 가변이랑 관련있는 접두어


기본으로 쓴다
display: flex;
            flex-flow: row wrap;
            justify-content: space-around;


align-items: stretch; = 기본값

align-items: flex-start; 해당라인에 시작선부터 나옴

align-items: flex-end; 해당라인에 끝선부터 나옴

align-items: center; 축의 가운데에 나옴

align-items: baseline; 폰트기준으로 박스가 잡힌다


플렉스 아이템 교차축방향 개별 배치(align-self) => [플렉스 아이템]에 설정
        : 교차축 방향으로 플렉스 아이템에 개별적 배치
        # 속성명 : align-self
        # 속성값 : flex-start, flex-end, center ...

부모에서 플렉스아이템을 상속받기 싫으면 개별적으로
자식들에게 align-self 를 사용한다

height : auto; 기본값

플렉스아이템 순서 바꾸기(order) => [플렉스 아이템]에 설정 : HTML 코딩이나
      탭 순서와 상관없이 화면에 보이는 순서에만 영향을 줌 => 구조에는 영향을
      못끼침 # 속성명 : order # 속성값 : nth, n=숫자


플렉스아이템 너비확대축소(flex) => [플렉스 아이템]에 설정
        : 플렉스 아이템의 너비를 설정하는 것
            증가너비 [기본값 0] | # 속성명 = flex-grow,
            감소너비 [기본값 1] | # 속성명 = flex-shrink,
            기본너비 [기본값 auto] | # 속성명 = flex-basis
        
    코드예시
        선택자 {
            flex: 1 1 0; //증가너비 감소너비 기본너비
            flex : 1 0; //증가너비 감소너비
            flex : 1 20px; //증가너비 기본너비(단위를 사용하면 기본너비가 적용)
        }



