@23/01/04

자바스크립트 = 동사
css = 형용사
EcmaScript
js와 java는 다르다
js = 웹브라우저에서 움직임
모든 브라우저에는 자바스크립트 해석기가 들어있다
node.js 기반은 자바스크립트

javaScript = 웹에서 사용하기가 어려움 그래서 jquery가 나옴
자바스크립트에서는 library 와 framework
library = 개방성이 있다
framework = 액자안에서 작업을한다 |  이렇게만 해! 그럼 이렇게 해야한다
이것역시 top-down = 기계어변화 = 인터프린터
컴파일 언어는 빠르지만 오류잡기힘듦

javaScript = Dom객체의 관한 조작
기본작동방식 = OOP (Object oriented program)
객체지향 프로그램 = java | 객체지향 = 레고, 시계판
객체지향의 기본 = 특정기능들을 직접 구현하지않아도 됨

javaScript 객체 = 브라우저에 들어가있다
객체 = 폴더 
객체 구성요소 2개
메서드 와 속성
메서드 ( ) => 기능을 가지고있음,  함수
속성 => 기능을 가지고있음 , attribute

종료 = ;(세미콜론)
. = ~객체의
객체.메서드() | 객체.속성

window = 최상위 객체
body 바깥에 뜸
document = body와 관련있음

alert = window 객체 소속이라서 생략이 가능함

data = 데이터 타입이 있다
모든 프로그래밍의 시작은 변수

변수 = 데이터를 담는 그릇
변수의 반대는 상수 = 변하지않는 수 / 정해져있음
약속된 단어 = keyword / 변수로 사용불가

= 대입연산자
문자형 숫자형 참/거짓 3개

키에 접근하면 값을 가져올수있다
js = 키 참조방식
html =  주소참조방식

document.write = 화면에 찍어줌

메서드 ( ) 괄호안에 들어가있는 것은 파라매터 or 매개변수, 인자, argument
인자 = 원인을 일으키는 놈

"" 안에 쓰면 문자열 또는 문자

console = 메모리 공간에 있는 데이터를 볼수있음

.write   중요
console  
 
표준 = defult값 

변수는 반드시 값이 무조건 하나다
typeof = 데이터 타입 보여줌

null = 눈에 보이지 않지만 뭔가가 있음
db 에서 많이 쓰임

 브라우저는 <(꺽새)를 만나면 태그로 인식함
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/05

단축기 바꾸는 법 
파일 기본설정 바로가기 키
--------------------------------------------------

변수 = 데이터를 담는 그릇

문자형, 숫자형, 논리형
string, number, boolean(ture, false)

모든 프로그래밍 언어는 계산은 기본적으로 되어있다
= <- 할당 연산자  우항의 값이 좌항의 대입

제일 마지막에 연산이됨

true = 1
false = 0

== <- 같다라는 뜻
문자열 -> 숫자형(또는 반대)으로 바꾸는 것을 형 변환이라고 한다
모든 논리형은 false로 시작한다

 + 연산시 데이터형이 하나라도 문자열일 경우 (무조건) 문자열 결합으로 연산

문자를 숫자로 형변환 할려면 Number를 사용

메서드 = function
prompt =  :string = 리턴타입 (반환값)
void = 텅빈 | 아무거나 올수 있다
무엇이 들어올지 모르기 떄문에 동적데이터라고한다

메서드는 안에서 바깥으로 나간다

저장이 되는 순간 메모리로 올라간다
접근 할려면 키값으로 접근한다

변수 하나에는 값이 하나들어감
10 과 "10"은 다르다

var = 데이터에 우효성을 해칠수있다
let = 변수명은 못바꾸지만 값은 바꿀수 있다
const = 변수명과 값을 절대 못바꾼다 | 불변변수

암묵적 약속
단어+단어 카멜표기법
첫단어는 소문자 두번쨰 단어부터 대문자

값이 0으로 나오는 4개
false, 숫자 0, undefiend, null

나머지 값은 %로 구함

복합 대입연산자
+=, -=, *=, /=, %=

증감연산자 = 1씩증가하거나 1씩 감소하거나

증감연산자 전위(前位) : 초기값을 처음에 무조건 사용할때 사용
증감연산자 후위(後位) : 일반적인 증감연산자 

대입연산자 =  <- 요거는 제일 마지막
! = not을 표현함

비교연산자 : 논리값으로 결과 반환 => 결과는 true, false
'' 이거와 "" 이거를 따로따로 써야 한다
"" + ""를 같이쓰면 오류남

논리가 나오면 결과값은 참 또는 거짓

논리연산자(논리합) : || or 연산자로 논리식 중 하나라도 true면 ture
논리연산자(논리곱) : && and 연산자로 논리식 중 모두가 true면 ture
논리연산자(논리부정) : ! not연산자, 단항 연산자 = 결과의 반대 = 부정
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/25

// 삼항조건연산자
// 형식: 조건식?true일 경우실행(자바스크립트코드):false일 경우실행(자바스크립트코드);

confirm = true false 값을 반환한다

if문 = 만약 ~라면 ~를 ~하겠다

if (조건) {
    (조건에 맞으면 여기를 출력)
}
else {
    (조건이 안맞으면 여기를 출력)
}

{} = 코드블록 |  실행문이 여기 들어감
location 주소창이랑 관련있다
location.reload(); = 새로고침
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/26

js

switch(조건식) {
            case n 조건값 :
                실행문;
                break;
            default:
                실행문;
        }
 결과값은 무조건 0과1 참과거짓
조건식에서 문제를 내고 case에 답을 쓴다

break; 를 만나는 순간 중괄호 밖으로 나가서 실행문이 끝난다

**변수에 선언위치에 따라서 변수에 성격이 바뀐다
코드블록 밖에있으면
global(전역변수)

코드블록 안에있으면
local(지역변수)

기본 데이터 타입 문자열 숫자 논리형
좌항 = 우항
변수할당
오른쪽에 있는 값을 왼쪽으로 넣는 것

반복문

while문
조건이 맞으면 계속 반복한다
// 1. 초기값
// 2. 조건식
// 3. 증감식

 // 1. 초기값
        var i = 1;
        // 2. 조건식
        while(i <= 5) {
            document.write('안녕하세요 ' + i + "<br>");
            // 3. 증감식
            i++;
        }
        document.write("while문 종료" + i);

for문
// [형식]
        // for(초기값; 조건식; 증감식) {
        //     실행문;
        // }
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/01/27

JS

함수 function = 기능,  중요함
매서드 = method
둘다 하는일은 같다
호출(결과값 반환)

레고가 객체지향의 끝

[형식]
        var 참조변수명 = function () {
            실행문;
        }
익명함수는 이름이 없기 때문에 변수에 담아서 사용

함수를 사용하려면 호출을 해야한다

// 2. 함수 호출
        // 1-1-1. 익명함수 호출 : 호출시 반드시 익명함수 아래에서 호출(Top-Down)
        noName();


매개변수
매개 = 연관된

어딘가에 연관이 되어있느 변수
값이 바뀔수 있는 변수
데이터를 매개변수에 넣어서 사용하는것
호출(data)

이벤트 호출 방식
<button onclick="ezFn2('jihwan')">버튼1</button>

인라인 방식

Event = 사건 = 마우스,키보드

선언적 함수 = Event Listener = Handler 이벤트

객체
메서드와 속성으로 이루어져있다

메모리 번지수에 데이터 저장
0번부터시작