@23/02/07
자바스크립트의 lib(library)
JS는 코어기술(안없어짐)

브라우저에서 동적인 것을 얻기 위해서 사용
이벤트 쓰기 위해서 사용

선택자 선택하고 이벤트 이용이 제일 쉬운게 jQuery

선택자를 사용할 떄 $()를 사용

$(document).ready(function(){}); = 기본

CDN = content delievery network

document = body = 브라우저
$(document) = body에 있는애를 돔객체에 올리고 사용

메서드 체이닝 = .으로 계속 이어서 사용 할 수 있다.

// 1. 전체 선택자
            $("*").css("color","red");
*로 전체 선택을 한뒤 css라는 속성을 사용하고 안에는 인자값을 문자열로 사용하면 된다.

// 2. 요소명 선택자
            $("h3").css("color","green");

// 3. 클래스 선택자
            $(".author").css("color","blue");

$(".author").css({color:'blue',backgroundColor:"yellow",'font-size':'24px'})
여러줄을 사용할려면 {} 를 사용해서 쓴다 구분은 ,로 한다

{} = 객체
객체의 데이터형식 = 키 : 밸류

-를 사용하는 것과 단위는 '' "" 이것을 넣고 사용해야한다

카멜표기법을 사용하면 "",'' 인용구 안에 사용안하고 쓸수 있다

 $('ul').children() = 자식을 선택할수 있는 속성 children();
{}안에 사용하면 단위 안써줘도 된다

$('li').parent() = li기준으로 부모를 선택

$('ul').siblings() = 형제 선택자 ul의 형제를 선택해주는 속성


//div 태그에 #a인 요소만 선택
            $('div#a')

부트스트랩 : 클래스화 해서 css적용 시키는 것
card-body 부트스트랩 클래스 중 하나

// 1. 자식선택자
            $("#one>div").css('color','orange');
            // 2. 인접 형제 선택자
            $('#one+div').css('border','5px solid gray');
            #one에 인접하는 div형제선택
            // 3. 형제 선택자
            $('#one~div').css('color','green');
            #one에 div라는 모든 형제 선택

thead tbody tfoot 중요
 // table 선택 = 모던 브라우저에서 <tbody>자동 추가 = 자식 선택자 사용시 반드시 포함시켜 줘야함
            $('#foods>tbody>tr').css('color','gray');


// 짝수에 배경색칠하기 tr:even
            $('#foods>tbody>tr:even').css('background-color','darkgray');
// 홀수에 배경색칠하기 tr:odd
            $('#foods>tbody>tr:odd').css('background-color','gray');

원하는 것 만 골라 내는 것 : 필터

필터선택자의기본은 :

//인덱스 번호로 선택
            $('#foods tr:eq(2)').css({backgroundColor:'orange',color:'white'});
            $('#foods tr').eq(2).css({backgroundColor:'orange',color:'white'});
//less than ~미만, greater than ~초과
            $('#foods_two tr:lt(3)').css('background-color','gray');
            $('#foods_two tr:gt(3)').css('background-color','lightgray');

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/02/08

eq(-1) = last-child랑 같다 마지막꺼 부터 선택


초기값 중요
background : 초기값이 none;
backgroundColor : 초기값이 transparent(투명)
둘이 섞어서 쓰면 초기값을 생각하고 사용해야함
상속을 안받음, 흰색이 나오는 것이 아니라 투명색이 보이는 것이다
브라우저 기본값이 화이트라서 그렇게 보이는 것이다
반응형 실습에서 물어볼꺼임

eq()와find()를 제일 많이 사용한다 외워야한다

is()가 붙어 있으면 물어보는 것이다 있는지 없는지(boolean형)

addClass = 제이쿼리에서만 사용가능

1. filter() : 기본 선택자를 사용해도 되지만, 배열과 관련된 DOM객체에서 특정 문서객체를 걸러내서 선택할 목적 포함
2. eq() : 요소들의 인덱스번호(0부터 시작)를 이욯하여 선택
3. first(), last() : 요소의 맨 처음과 맨 마지막을 선택
4. find() : 선택된 DOM객체의 후손문서객체를 선택
5.is() : 주어진 매개변수와 하나라도 일치하면 true값 리턴


// 1. addClass() : 선택 DOM객체에 지정된 클래스 추가
            $('h5').eq(0).addClass('change_01');
            $('h5').eq(1).addClass('change_02');
            // 2. removeClass() : 선택 DOM객체에 지정된 클래스 삭제
            $('h5').eq(1).removeClass('change_02');

            // 3. attr() : DOM객체의 속성값을 확인하거나, 속성을 추가
            //             매개변수가 2개일 경우 값을 변경하는 것(속성명:속성값;)
            $('img').attr('width',300);
            $('img').attr('height',300);

html() : 선택 DOM객체의 첫번쨰 요소 문자열 반환, html태그 인식함

text() : 선택 DOM객체의 모든 문자열을 묶어서 반환, html태그 인식못함


appendTo() = 매개변수의 맨 마지막 자식요소로 태그 생성
remove() : 선택 DOM객체 제거 = 매개변수 없음 = 태그자체를 삭제
empty() : 자식노드를 제거(텍스트노드도 삭제)
$(document).ready(function() {}); => $(function(){});  축약해서 사용가능

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/02/09

제이쿼리 효과 = 애니메이션 = 시간이 필요함

단일 이벤트 형식으로 효과 구현(click이벤트 하나만 사용)

오버로드 = 매개변수와 관련 재사용

// 1. show(), hide(), toggle()
            $('#btn1').click(function(){
                $('.box1').hide('fast');
            });
            버튼을 누르면 .box1이 사라진다

            $('#btn2').click(function(){
                $('.box1').show(300);
            })
            버튼을 누르면 .box1이 나타난다

            $('#btn3').click(function(){
                $('.box1').toggle('slow');
            })
            버튼을 누르면 .box1이 사라지고 다시 누르면 .box1이 나타난다

this = 이벤트 시킬 돔객체

next() = 인접형제 +랑 비슷하다

$(this).parent().next().slideDown();
이벤트 시킬 돔 객체 의 부모의 형제를 선택하는 코딩

SHOW DOM선택 요소를 숨기고 싶을 경우에 사용
HIDE DOM선택 요소를 노출하고 싶을 경우에 사용

slideUp은 DOM선택요소를 위로 미끄러지듯 말아 올리면서 숨김
slideDown은 DOM선택요소를 아로로 미끄러지듯 말아 내리면서 노출시킴

fadeOut은 DOM선택요소를 천천히 사라지게 함
fadeIn은 DOM선택요소를 천천히 나타나게 함

hide = display:none; 단지 효과가 안보일뿐 
show = display:block;

this의 사용은 구조의 공통 코딩있으면 this사용해버린다

 // 1. animate({속성명:속성값(숫자)},시간,속도,콜백함수);
            //     a. 속성 : 반드시 매개면수값을 입력(속성값이 숫자값으로 사용되는 속성들만 사용가능)
            //         => 제이쿼리 코어 플러그인 경우
            //     b. 시간 : 'slow', 'normal', 'fast'
            //     c. 속도 : swing(기본값), linear(동일속도)
            //     d. 콜백함수 : 해당 메서드가 실행이 된 이후 호출하여 사용하는 함수

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/02/10

binding 바인딩 = 묶다 = 키 : 밸류 생각하면 된다 , on()  <= 이것도 바인딩

단일 이벤트랑 on()메서드를 제일 많이 쓴다

단일 이벤트 선택 돔하나에 이벤트리스너 하나

경품추첨 같은 응모하는것 one()메서드 사용

one() 이벤트 메서드 : 이벤트 한번만 실행
            
on() 이벤트 메서드 : 하나의 DOM요소에 여러개 이벤트 등록 가능


마우스 이벤트 (둘다 크로스해서 사용해도 되긴한다)
mouseenter
mouseleave
범위가 더 넓다 패딩값까지 인지함

mouseover
mouseout
범위가 더 좁다

$(':text').val();
텍스트라는 타입에 값을 가져온다.

val(); 밸류값을 가져온다

$(':text').focus()
텍스트라는 타입에 커서가 왔을 떄


기본속성 제거 = preventDefault();
함수의 매개변수로 e를 주고 e.preventDefault();선언하면 기본기능 제거가 된다


scroll 이벤트 = 스크롤 영역은 윈도우영역이라서 선택자는 window

메서드는 기능을 가지고 있다
scrollTop은 얼마나 내렸는데 값을 알려준다

스크롤이 어느정도 갔을 떄 메뉴 같은 거 나오게 할려면
if 스크롤이 어느정도 갔을 떄 로 사용하면 된다

jQuery 플러그인 = 효과 관련된거를 api형식으로 가져다가 쓰는 것 
효과를 쉽게 남이 만들 것을 사용하는것

a에 #을걸면 맨위로 탁! 가진다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
@23/02/14

data-* 속성 : 
            웹 문서의 레이아웃이나 내용에는 영향을 주지 않으면서, 구분할 특정 속성을 지정하고 싶을때 사용
            (-뒤 속성명은 마음대로 지정해도 됨)
            주로 스크립트와 연동해서 사용

css 수정할 때 원본은 지우지 말고 복사해서 아래에다가 커스텀한다


    // 1. 슬라이드 이동방향 : 'horizontal', 'vertical', 'fade'
    mode: 'horizontal',
    // 2. 슬라이드 전환시 속도 : 숫자형 값 = 하나의 이미지가 바뀌는 시간
    speed: 500,
    // 3. 슬라이드 자동실행 전환 사이 시간 : 숫자형 값 = (예)1초마다 다른 이미지로 바뀜
    pause: 1000,
    // 4. 블릿(동그라미 버튼) 노출 여부 : 논리형 값 = true, false
    pager: true,
    // 5. 슬라이드 박스 가로 너비 설정 : 숫자형 값 | (중요)구조 스타일에 width값이 코딩되어 있으면 안바뀜
    slideWidth: 1440,
    // 6. 콘트롤러 중 자동 슬라이드 멈추기 여부 : 논리형 값 = true, false
    stopAutoOnClick: true,
    // 7. 슬라이드 자동전환 여부 : 논리형 값 = true, false
    auto: true,
    // 8. 슬라이드 마우스 호버시 자동전환 멈추게 할 것인지 여부 : 논리형 값 = true, false
    autoHover : true,
    // 9. 플레이 버튼 노출 여부 : 논리형 값 = true, false
    autoControls: true,
    // 10. 썸네일 이미지 연결 = 구조의 클래스명
    pagerCustom : '.slide_pager'


<!-- 2. 기본 효과 -->
    <!-- <script>
        $(function() {
            $('.slide_gallery').bxSlider({
                auto: true,
                autoControls: false,
                autoHover: true,
                pager: true,
                // pager와 같이 못씀
                // pagerCustom : '.slide_pager',
                slideWidth: 1440,
            });
        });
    </script> -->


3. 실제 사용효과
    <script>
        $(function() {
            $('.slide_gallery').bxSlider({
                mode: 'fade',
                pager: true,
                slideWidth: 1440
            });
        });
    </script>